@use "../../mixins" as *;

.btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-family: inherit;
  font-weight: 500;
  text-align: center;
  text-decoration: none;
  border: 1px solid transparent;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  white-space: nowrap;
  user-select: none;
  outline: none;

  .btn__content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  &:focus-visible {
    outline: 2px solid $primary-color;
    outline-offset: 2px;
  }

  &--sm {
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    min-height: 2rem;

    @media (min-width: 768px) {
      padding: 0.5rem 1rem;
    }
  }

  &--md {
    padding: 0.75rem 1rem;
    font-size: 1rem;
    min-height: 2.5rem;

    @media (min-width: 768px) {
      padding: 0.75rem 1.25rem;
    }
  }

  &--lg {
    padding: 1rem 1.5rem;
    font-size: 1.125rem;
    min-height: 3rem;

    @media (min-width: 768px) {
      padding: 1rem 2rem;
    }
  }

  &--primary {
    background-color: $primary-color;
    color: $text-white;
    border-color: $primary-color;

    &:hover:not(.btn--disabled) {
      background-color: $primary-hover;
      border-color: $primary-hover;
    }

    &:active:not(.btn--disabled) {
      background-color: $primary-dark;
      border-color: $primary-dark;
    }
  }

  &--secondary {
    background-color: $gray-50;
    color: $text-primary;
    border-color: $border-light;

    &:hover:not(.btn--disabled) {
      background-color: $gray-200;
      border-color: $border-medium;
    }
  }

  &--outline {
    background-color: transparent;
    color: $primary-color;
    border-color: $primary-color;

    &:hover:not(.btn--disabled) {
      background-color: $shadow-primary-light;
      color: $primary-hover;
      border-color: $primary-hover;

      @media (prefers-color-scheme: light) {
        background-color: $shadow-primary-light;
      }
    }
  }

  &--ghost {
    background-color: transparent;
    color: $text-primary;
    border-color: transparent;

    &:hover:not(.btn--disabled) {
      background-color: $gray-100;
      color: $text-primary;
    }
  }

  &--destructive {
    background-color: $error-color;
    color: $text-white;
    border-color: $error-color;

    &:hover:not(.btn--disabled) {
      background-color: $error-hover;
      border-color: $error-hover;
    }

    &:active:not(.btn--disabled) {
      background-color: #a93226;
      border-color: #a93226;
    }
  }

  /* Button States */
  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  &--loading {
    cursor: not-allowed;
    pointer-events: none;

    .btn__content {
      opacity: 0.7;
    }
  }

  /* Button Icons */
  &__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;

    &--left {
      margin-right: 0.25rem;
    }

    &--right {
      margin-left: 0.25rem;
    }
  }

  /* Loading Spinner */
  &__spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: btn-spin 1s linear infinite;
  }
}

@keyframes btn-spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* Touch Device Optimizations */
@media (hover: none) and (pointer: coarse) {
  .btn {
    min-height: 44px; /* iOS accessibility guidelines */

    &--sm {
      min-height: 40px;
    }

    &--lg {
      min-height: 48px;
    }
  }
}
